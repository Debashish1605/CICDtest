name: Deploy New or Modified WAR Files to Tomcat

on:
  push:
    branches:
      - '**'  # Trigger on any branch push
    paths:
      - '**/*.war'  # Trigger only when a .war file is pushed

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the code
      - name: Checkout code
        uses: actions/checkout@v3

      # Step 2: List directory contents for debugging
      - name: List directory contents
        run: |
          echo "Listing directory contents:"
          ls -alh

      # Step 3: Find all WAR files in the repository
      - name: Find WAR files
        run: |
          WAR_FILES=$(find . -name '*.war')
          echo "WAR files found: $WAR_FILES"
          echo "WAR_FILES=$WAR_FILES" >> $GITHUB_ENV

      # Step 4: Set up SSH connection
      - name: Set up SSH
        uses: webfactory/ssh-agent@v0.5.3
        with:
          ssh-private-key: ${{ secrets.AWS_SSH_KEY }}

      # Step 5: Deploy new or modified WAR files
      - name: Deploy new or modified WAR files
        run: |
          for WAR_FILE in $WAR_FILES; do
            FILENAME=$(basename $WAR_FILE)

            # SSH into the server to check the list of already deployed files
            DEPLOYED_FILES=$(ssh -o StrictHostKeyChecking=no ubuntu@54.161.132.40 "cd /home/ubuntu/apache-tomcat-10.1.34/webapps/ && ls -l *.war")

            # Check if this WAR file is already deployed
            if echo "$DEPLOYED_FILES" | grep -q "$FILENAME"; then
              echo "$FILENAME already deployed. Checking if it is modified."

              # If it's deployed, check if the WAR file is modified (based on the timestamp or hash)
              LOCAL_HASH=$(sha256sum "$WAR_FILE" | cut -d ' ' -f 1)
              REMOTE_HASH=$(ssh -o StrictHostKeyChecking=no ubuntu@54.161.132.40 "sha256sum /home/ubuntu/apache-tomcat-10.1.34/webapps/$FILENAME | cut -d ' ' -f 1")

              if [ "$LOCAL_HASH" != "$REMOTE_HASH" ]; then
                echo "Modified WAR file detected. Re-deploying."

                # Remove the old WAR file
                ssh -o StrictHostKeyChecking=no ubuntu@54.161.132.40 "rm -f /home/ubuntu/apache-tomcat-10.1.34/webapps/$FILENAME"

                # Deploy the new WAR file
                scp -o StrictHostKeyChecking=no "$WAR_FILE" ubuntu@54.161.132.40:/home/ubuntu/apache-tomcat-10.1.34/webapps/

                # Restart Tomcat and verify the deployment
                ssh -o StrictHostKeyChecking=no ubuntu@54.161.132.40 << EOF
                  cd /home/ubuntu/apache-tomcat-10.1.34
                  ./bin/shutdown.sh
                  ./bin/startup.sh
                  ls -l /home/ubuntu/apache-tomcat-10.1.34/webapps/
                EOF

                # Update deployed files list
                ssh -o StrictHostKeyChecking=no ubuntu@54.161.132.40 << EOF
                  grep -v "$FILENAME" /home/ubuntu/apache-tomcat-10.1.34/webapps/deployed_files.txt > /home/ubuntu/apache-tomcat-10.1.34/webapps/deployed_files.tmp
                  mv /home/ubuntu/apache-tomcat-10.1.34/webapps/deployed_files.tmp /home/ubuntu/apache-tomcat-10.1.34/webapps/deployed_files.txt
                  echo "$FILENAME" >> /home/ubuntu/apache-tomcat-10.1.34/webapps/deployed_files.txt
                EOF
              else
                echo "No changes detected for $FILENAME. Skipping deployment."
              fi
            else
              # If not deployed, deploy the new WAR file
              echo "Deploying new WAR file: $FILENAME"
              scp -o StrictHostKeyChecking=no "$WAR_FILE" ubuntu@54.161.132.40:/home/ubuntu/apache-tomcat-10.1.34/webapps/

              # Restart Tomcat and verify the deployment
              ssh -o StrictHostKeyChecking=no ubuntu@54.161.132.40 << EOF
                cd /home/ubuntu/apache-tomcat-10.1.34
                ./bin/shutdown.sh
                ./bin/startup.sh
                ls -l /home/ubuntu/apache-tomcat-10.1.34/webapps/
              EOF

              # Add the newly deployed WAR file to the list
              ssh -o StrictHostKeyChecking=no ubuntu@54.161.132.40 << EOF
                echo "$FILENAME" >> /home/ubuntu/apache-tomcat-10.1.34/webapps/deployed_files.txt
              EOF
            fi
          done
